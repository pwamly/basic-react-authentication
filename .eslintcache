[{"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/index.js":"1","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/Profile.js":"2","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/App.js":"3","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Home/index.js":"4","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Head/index.js":"5","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Auth/Login.js":"6","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Auth/Register.js":"7","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Auth/Forgot.js":"8","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Head/Home.js":"9","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Head/Dashboard.js":"10","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/ProtectRoute.js":"11","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dashboard/index.js":"12","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/client/index.js":"13","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/client/client.js":"14","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Profile/index.js":"15","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dashboard/Cards.js":"16","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/reducer.js":"17","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/actions.js":"18","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Auth/Adduser.js":"19","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dashboard/Carditem.js":"20","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dashboard/ViewUser.js":"21","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Auth/Edituser.js":"22","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dashboard/EditUsr.js":"23"},{"size":168,"mtime":1609155488025,"results":"24","hashOfConfig":"25"},{"size":353,"mtime":1609155305125,"results":"26","hashOfConfig":"25"},{"size":1299,"mtime":1610247529417,"results":"27","hashOfConfig":"25"},{"size":743,"mtime":1609911912728,"results":"28","hashOfConfig":"25"},{"size":250,"mtime":1609344225763,"results":"29","hashOfConfig":"25"},{"size":1338,"mtime":1609963505712,"results":"30","hashOfConfig":"25"},{"size":843,"mtime":1609945301778,"results":"31","hashOfConfig":"25"},{"size":433,"mtime":1609421432877,"results":"32","hashOfConfig":"25"},{"size":302,"mtime":1609343793693,"results":"33","hashOfConfig":"25"},{"size":494,"mtime":1609880569792,"results":"34","hashOfConfig":"25"},{"size":548,"mtime":1609908798660,"results":"35","hashOfConfig":"25"},{"size":995,"mtime":1610246461085,"results":"36","hashOfConfig":"25"},{"size":26,"mtime":1609530868226,"results":"37","hashOfConfig":"25"},{"size":2618,"mtime":1610246422813,"results":"38","hashOfConfig":"25"},{"size":1479,"mtime":1610252282273,"results":"39","hashOfConfig":"25"},{"size":1220,"mtime":1610247701169,"results":"40","hashOfConfig":"25"},{"size":2041,"mtime":1610247862693,"results":"41","hashOfConfig":"25"},{"size":483,"mtime":1610218759377,"results":"42","hashOfConfig":"25"},{"size":1782,"mtime":1610246498053,"results":"43","hashOfConfig":"25"},{"size":1209,"mtime":1610250486933,"results":"44","hashOfConfig":"25"},{"size":1279,"mtime":1610221289325,"results":"45","hashOfConfig":"25"},{"size":100,"mtime":1610192386634,"results":"46","hashOfConfig":"25"},{"size":3752,"mtime":1610246475889,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"86wbd6",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"50"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"50"},"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/index.js",[],["105","106"],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/Profile.js",[],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/App.js",[],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Home/index.js",["107","108"],"import React from \"react\";\nimport Login from \"../Auth/Login\";\nimport Register from \"../Auth/Register\";\nimport Forgot from \"../Auth/Forgot\";\nimport Head from \"../Head\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nconst login = true;\nconst forgot = \"\";\n\nfunction index() {\n  return (\n    <>\n      <Head />\n      <div className=\"main\">\n        <Router>\n          <Switch>\n            <Route path=\"/login\">\n              <Login />\n            </Route>\n            <Route path=\"/register\">\n              <Register />\n            </Route>\n            <Route path=\"/reset-password\">\n              <Forgot />\n            </Route>\n          </Switch>\n        </Router>\n      </div>\n    </>\n  );\n}\n\nexport default index;\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Head/index.js",["109"],"import React from \"react\";\nimport Home from \"./Home\";\nimport Dashboard from \"./Dashboard\";\nconst login = false;\nfunction index() {\n  {\n    if (login) {\n      return <Dashboard />;\n    } else {\n      return <Home />;\n    }\n  }\n}\nexport default index;\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Auth/Login.js",["110","111"],"import React, { useState, useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { login, registerUser } from \"../../client/index\";\nfunction Login() {\n  const [isLoged, setIsLoged] = useState(false);\n\n  const email = useRef(\"\");\n  const password = useRef(\"\");\n  const hundleSubmit = (e) => {\n    e.preventDefault();\n    login({ email: email.current.value, password: password.current.value });\n  };\n\n  return (\n    <>\n      {isLoged ? (\n        <div className=\"form-wrapper-login\">Logged in</div>\n      ) : (\n        <div className=\"form-wrapper-login\">\n          <form className=\"form\" action=\"\">\n            <input\n              type=\"email\"\n              name=\"username\"\n              ref={email}\n              placeholder=\"username/email\"\n            />\n            <input\n              type=\"password\"\n              name=\"password\"\n              ref={password}\n              placeholder=\"password\"\n            />\n            <button className=\"btn\" type=\"submit\" onClick={hundleSubmit}>\n              Login\n            </button>\n            <h4>\n              Not a member yet ? <Link to=\"/register\">Sign up now</Link>\n            </h4>\n            <h4>\n              <Link to=\"/reset-password\">Forgot password ?</Link>\n            </h4>\n          </form>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default Login;\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Auth/Register.js",[],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Auth/Forgot.js",[],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Head/Home.js",[],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Head/Dashboard.js",[],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/ProtectRoute.js",[],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dashboard/index.js",[],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/client/index.js",[],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/client/client.js",["112"],"import { stringify } from \"query-string\";\nimport { v4 as uuidv4 } from \"uuid\";\nvar cache = require(\"js-cache\");\n\nconst admindata = cache.get(\"userData\");\n\nif (!admindata) {\n    cache.set(\n        \"userData\", [{\n            id: uuidv4(),\n            fname: \"Peter\",\n            lname: \"Boko\",\n            email: \"peter@gmail.com\",\n            status: \"Active\",\n            role: \"admin\",\n            phone: \"255673089337\",\n            password: \"1234\",\n        }, ],\n        6000000\n    );\n}\n\nconst data = cache.get(\"userData\") || [];\n\nexport const isValidUser = () => {\n    return localStorage.getItem(\"isLogged\");\n};\n\nexport const isAdmin = () => {\n    return false;\n};\n\nexport const authenticate = () => {\n    return false;\n};\n\nfunction isEmailExist(email) {\n    for (var i = 0; i < data.length; i++) {\n        if (data[i].email === email) {\n            return data[i];\n        }\n    }\n}\n\n//register user\n\nexport const registerUser = (newuser) => {\n    const data = cache.get(\"userData\");\n    const { email } = newuser;\n    if (!isEmailExist(email)) {\n        try {\n            newuser = {...newuser, id: uuidv4(), status: \"Inactive\", role: \"user\" };\n            data.push(newuser);\n            cache.set(\"userData\", data, 6000000);\n            return { Successful: true, message: \"success\" };\n        } catch (error) {\n            return { Successful: false, message: \"user exist\" };\n        }\n    } else {}\n};\n\n// remove user\n\nexport const removeUser = ({ id }) => {\n    const data = cache.get(\"userData\");\n\n    const newdata = data.filter((user) => user.id !== id);\n    cache.set(\"userData\", newdata, 6000000);\n    return newdata;\n};\n\n// login\n\nexport const login = (value) => {\n    const { email, password } = value;\n    const data = cache.get(\"userData\") || [];\n\n    for (var i = 0; i < data.length; i++) {\n        if (data[i].email === email && data[i].password === password) {\n            localStorage.setItem(\"isLogged\", true);\n            const { fname, lname, email, status, role, phone, id } = data[i];\n            const prof = { id, fname, lname, email, status, role, phone };\n            localStorage.setItem(\"profile\", JSON.stringify(prof));\n            window.location.replace(`/dashboard`);\n            return true;\n        }\n    }\n};\n\n// get profile\n\nexport const getProfile = () => {\n    const prof = localStorage.getItem(\"profile\");\n    return JSON.parse(prof);\n};\n\n// fetch user data\nexport const userData = () => {\n    const data = cache.get(\"userData\");\n    return data;\n};\n\n// logout\nexport const logout = () => {\n    localStorage.clear();\n    window.location.replace(`/login`);\n    return;\n};","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Profile/index.js",[],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dashboard/Cards.js",["113","114","115","116","117","118","119"],"import React, { useState } from \"react\";\nimport avatar from \"../../assets/logo512r.png\";\nimport { connect } from \"react-redux\";\nimport { ADD_USER, ADD_USER_FORM, REMOVE_USER } from \"../../actions\";\nimport { FaEye, FaRegEye, FaTrash } from \"react-icons/fa\";\nimport Carditem from \"./Carditem\";\n\nfunction Cards({\n  user = [],\n  adduser,\n  dispatch,\n  children,\n  remove,\n  edituser,\n  viewuser,\n  adduserbtn,\n}) {\n  return (\n    <div className=\"cards\">\n      {!(user.length === 0) ? (\n        user.map((item) => <Carditem {...item} key={item.id} />)\n      ) : (\n        <div className=\"nouser\">\n          <h3> No user yet </h3>\n        </div>\n      )}\n      {adduser && children} {viewuser && children} {edituser && children}\n      {adduserbtn && (\n        <div className=\"cbtn\">\n          <button\n            className=\"btn\"\n            onClick={(e) => {\n              e.preventDefault();\n              dispatch({ type: ADD_USER_FORM });\n            }}\n          >\n            Add User\n          </button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction mapStateToprops(store) {\n  const { data, adduser } = store;\n  return { ...store, user: data, adduser: adduser };\n}\n\nexport default connect(mapStateToprops)(Cards);\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/reducer.js",["120","121"],"import {\n    ACTIVATE_USER,\n    ADD_USER,\n    DEACTIVATE_USER,\n    REMOVE_USER,\n    EDIT_USER,\n    EXIT_ADD_FORM,\n    EXIT_EDIT_USER,\n    ADD_USER_FORM,\n    VIEW_USER,\n    EXIT_VEW_USER,\n    SAVE_UPDATES,\n} from \"./actions\";\nimport { removeUser, registerUser } from \"./client/\";\n\nfunction reducer(state, action) {\n    /*forms*/\n    if (action.type === EXIT_ADD_FORM) {\n        return {...state, adduser: false };\n    }\n    if (action.type === ADD_USER_FORM) {\n        return {...state, adduser: true };\n    }\n\n    /*user data*/\n    if (action.type === ADD_USER) {\n        if (action.payload) {\n            registerUser(action.payload);\n        }\n        return {...state, adduser: false };\n    }\n\n    if (action.type === REMOVE_USER) {\n        return {...state, data: removeUser(action.payload) };\n    }\n\n    if (action.type === VIEW_USER) {\n        return {\n            ...state,\n            adduser: false,\n            viewuser: true,\n            viewdata: action.payload,\n            viewusr: true,\n            adduserbtn: false,\n        };\n    }\n    if (action.type === EXIT_VEW_USER) {\n        return {\n            ...state,\n            viewuser: false,\n            viewdata: null,\n            adduserbtn: true,\n        };\n    }\n    if (action.type === EDIT_USER) {\n        return {...state, edituser: true, viewuser: false };\n    }\n    if (action.type === EXIT_EDIT_USER) {\n        return {...state, edituser: false, viewdata: null, adduserbtn: true };\n    }\n    if (action.type === SAVE_UPDATES) {\n        let { data } = state;\n        const { payload } = action;\n\n        for (let i = 0; i < data.length; i++) {\n            if (data[i].id === payload.id) {\n                data[i] = payload;\n                if (payload.role === \"admin\") {\n                    state.profile = payload;\n                }\n            }\n        }\n\n        return {\n            ...state,\n            edituser: false,\n            data,\n            viewdata: null,\n            adduserbtn: true,\n        };\n    }\n    return state;\n}\n\nexport default reducer;","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/actions.js",[],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Auth/Adduser.js",["122"],"import React, { useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { EXIT_ADD_FORM, ADD_USER } from \"../../actions\";\n\nfunction Adduser({ data, adduser, dispatch }) {\n  const fname = useRef(\"\");\n  const lname = useRef(\"\");\n  const email = useRef(\"\");\n  const phone = useRef(\"\");\n  const password = useRef(\"\");\n\n  const hundleSubmit = (e) => {\n    e.preventDefault();\n    dispatch({\n      type: ADD_USER,\n      payload: {\n        fname: fname.current.value,\n        lname: lname.current.value,\n        email: email.current.value,\n        phone: phone.current.value,\n        password: password.current.value,\n      },\n    });\n  };\n\n  return (\n    <div className=\"form-adduser\">\n      <h4 className=\"add-user-title\">Add New User</h4>\n      <form className=\"form\" action=\"\">\n        <input type=\"text\" name=\"fname\" ref={fname} placeholder=\"First Name\" />\n        <input type=\"text\" name=\"lname\" ref={lname} placeholder=\"Last Name\" />\n        <input type=\"email\" name=\"email\" ref={email} placeholder=\"Email\" />\n        <input type=\"text\" name=\"phone\" ref={phone} placeholder=\"Phone\" />\n        <input\n          type=\"text\"\n          name=\"password\"\n          ref={password}\n          placeholder=\"Password\"\n        />\n        <button className=\"btn\" onClick={(e) => hundleSubmit(e)}>\n          Save\n        </button>\n        <button\n          className=\"btn\"\n          onClick={(e) => {\n            e.preventDefault();\n            dispatch({ type: EXIT_ADD_FORM });\n          }}\n        >\n          Exit\n        </button>\n      </form>\n    </div>\n  );\n}\nfunction mapStateToprops(store) {\n  const { data, adduser } = store;\n  return { ...store, data: data, adduser: adduser };\n}\n\nexport default connect(mapStateToprops)(Adduser);\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dashboard/Carditem.js",["123","124","125"],"import React from \"react\";\nimport { ADD_USER, ADD_USER_FORM, REMOVE_USER, VIEW_USER } from \"../../actions\";\nimport avatar from \"../../assets/logo512r.png\";\nimport { FaEye, FaRegEye, FaTrash } from \"react-icons/fa\";\nimport { connect } from \"react-redux\";\n\nfunction Carditem(item) {\n  return (\n    <div className=\"card-items\" key={item.id} onClick={() => item.view()}>\n      <div className=\"eye\">\n        <FaRegEye />\n      </div>\n      <div className=\"delete\" onClick={() => item.remove()} key={item.id}>\n        <FaTrash />\n      </div>\n      <div className=\"username\">\n        <h3 className=\"h3span\">User Name:</h3>\n        <h3>{item.fname + \" \" + item.lname}</h3>\n      </div>\n      <div className=\"status\">\n        <h3 className=\"h3span\">Status:</h3> <h3>{item.status}</h3>\n      </div>\n      <div className=\"cavatar\">\n        <img className=\"cardimg\" src={avatar} alt=\"\" />\n      </div>\n    </div>\n  );\n}\nconst mapDispatchToprops = (dispatch, ownProps) => {\n  const { id } = ownProps;\n  return {\n    remove: () => dispatch({ type: REMOVE_USER, payload: { id } }),\n    view: () => dispatch({ type: VIEW_USER, payload: { ...ownProps } }),\n  };\n};\nexport default connect(null, mapDispatchToprops)(Carditem);\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dashboard/ViewUser.js",["126","127","128","129"],"import React, { useRef, useState } from \"react\";\nimport avatar from \"../../assets/logo512r.png\";\nimport { connect } from \"react-redux\";\nimport { EXIT_VEW_USER, EDIT_USER } from \"../../actions\";\n\nfunction ViewUser({ viewdata, dispatch, viewuser, edituser, viewusr }) {\n  const { id, fname, lname, email, status, role, phone } = viewdata;\n  const [value, setValue] = useState(viewdata);\n\n  return (\n    <div className=\"view\">\n      <div className=\"uavatar\">\n        <img className=\"uimg\" src={avatar} alt=\"\" />\n      </div>\n      <div className=\"udetails\">\n        <h4>\n          User name : {fname}-{lname}\n        </h4>\n        <h4>Email : {email}</h4>\n        <h4>Status : {status}</h4>\n        <h4>Role : {role}</h4>\n        <h4>Phone : {phone}</h4>\n      </div>\n      <div className=\"vbuttons\">\n        <button\n          className=\"btn\"\n          onClick={() => dispatch({ type: EXIT_VEW_USER })}\n        >\n          Exit\n        </button>\n        <button\n          className=\"btn\"\n          onClick={() =>\n            dispatch({ type: EDIT_USER, payload: { edit: \"profile\" } })\n          }\n        >\n          Edit\n        </button>\n      </div>\n    </div>\n  );\n}\nfunction mapStateToprops(store) {\n  return { ...store };\n}\n\nexport default connect(mapStateToprops)(ViewUser);\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Auth/Edituser.js",[],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dashboard/EditUsr.js",["130","131","132","133","134","135","136","137","138","139","140"],"import React, { useRef, useState } from \"react\";\nimport avatar from \"../../assets/logo512r.png\";\nimport { connect } from \"react-redux\";\nimport {\n  EXIT_VEW_USER,\n  EDIT_USER,\n  EXIT_EDIT_USER,\n  SAVE_UPDATES,\n} from \"../../actions\";\nimport Edituser from \"../Auth/Edituser\";\n\nfunction EditUsr({ viewdata, dispatch, viewuser, edituser, profile, viewusr }) {\n  const { id, fname, lname, email, status, role, phone } = viewdata || profile;\n  const initial = viewdata || profile;\n  const [value, setValue] = useState(initial);\n\n  return (\n    <div className=\"view\">\n      <div className=\"uavatar\">\n        <img className=\"uimg\" src={avatar} alt=\"\" />\n      </div>\n      {edituser && (\n        <form action=\"\" className=\"edetails\">\n          <div className=\"einput\">\n            <label className=\"elabel\" htmlFor=\"fname\">\n              First Name:\n            </label>\n            <input\n              type=\"text\"\n              name=\"username\"\n              value={value.fname}\n              id=\"\"\n              onChange={(e) => setValue({ ...value, fname: e.target.value })}\n            />\n          </div>\n          <div className=\"einput\">\n            <label className=\"elabel\" htmlFor=\"lname\">\n              Last Name:\n            </label>\n            <input\n              type=\"text\"\n              name=\"lname\"\n              value={value.lname}\n              id=\"\"\n              onChange={(e) => setValue({ ...value, lname: e.target.value })}\n            />\n          </div>\n          <div className=\"einput\">\n            <label className=\"elabel\" htmlFor=\"email\">\n              Email:\n            </label>\n            <input\n              type=\"email\"\n              name=\"email\"\n              value={value.email}\n              id=\"\"\n              onChange={(e) => setValue({ ...value, email: e.target.value })}\n            />\n          </div>\n          <div className=\"einput\">\n            <label className=\"elabel\" htmlFor=\"Status\">\n              Status:\n            </label>\n            <select\n              className=\"btn\"\n              name=\"\"\n              id=\"\"\n              onChange={(e) => setValue({ ...value, status: e.target.value })}\n            >\n              <option value=\"Active\">Activate</option>\n              <option value=\"Inactive\">Deactivate</option>\n            </select>\n          </div>\n          <div className=\"einput\">\n            <label className=\"elabel\" htmlFor=\"role\">\n              Role:\n            </label>\n            <input\n              type=\"text\"\n              name=\"role\"\n              value={value.role}\n              id=\"\"\n              onChange={(e) => setValue({ ...value, role: e.target.value })}\n            />\n          </div>\n          <div className=\"einput\">\n            <label className=\"elabel\" htmlFor=\"phone\">\n              Phone:\n            </label>\n            <input\n              type=\"text\"\n              name=\"phone\"\n              value={value.phone}\n              id=\"\"\n              onChange={(e) => setValue({ ...value, phone: e.target.value })}\n            />\n          </div>\n          <div className=\"vbuttons\">\n            <button\n              className=\"btn\"\n              onClick={(e) => {\n                e.preventDefault();\n                dispatch({ type: EXIT_EDIT_USER });\n              }}\n            >\n              Exit\n            </button>\n            <button\n              className=\"btn\"\n              onClick={(e) => {\n                e.preventDefault();\n                dispatch({ type: SAVE_UPDATES, payload: value });\n              }}\n            >\n              Save\n            </button>\n          </div>\n        </form>\n      )}\n    </div>\n  );\n}\n\nfunction mapStateToprops(store) {\n  return { ...store };\n}\n\nexport default connect(mapStateToprops)(EditUsr);\n",{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","severity":1,"message":"146","line":8,"column":7,"nodeType":"147","messageId":"148","endLine":8,"endColumn":12},{"ruleId":"145","severity":1,"message":"149","line":9,"column":7,"nodeType":"147","messageId":"148","endLine":9,"endColumn":13},{"ruleId":"150","severity":1,"message":"151","line":6,"column":3,"nodeType":"152","messageId":"153","endLine":12,"endColumn":4},{"ruleId":"145","severity":1,"message":"154","line":3,"column":17,"nodeType":"147","messageId":"148","endLine":3,"endColumn":29},{"ruleId":"145","severity":1,"message":"155","line":5,"column":19,"nodeType":"147","messageId":"148","endLine":5,"endColumn":29},{"ruleId":"145","severity":1,"message":"156","line":1,"column":10,"nodeType":"147","messageId":"148","endLine":1,"endColumn":19},{"ruleId":"145","severity":1,"message":"157","line":1,"column":17,"nodeType":"147","messageId":"148","endLine":1,"endColumn":25},{"ruleId":"145","severity":1,"message":"158","line":2,"column":8,"nodeType":"147","messageId":"148","endLine":2,"endColumn":14},{"ruleId":"145","severity":1,"message":"159","line":4,"column":10,"nodeType":"147","messageId":"148","endLine":4,"endColumn":18},{"ruleId":"145","severity":1,"message":"160","line":4,"column":35,"nodeType":"147","messageId":"148","endLine":4,"endColumn":46},{"ruleId":"145","severity":1,"message":"161","line":5,"column":10,"nodeType":"147","messageId":"148","endLine":5,"endColumn":15},{"ruleId":"145","severity":1,"message":"162","line":5,"column":17,"nodeType":"147","messageId":"148","endLine":5,"endColumn":25},{"ruleId":"145","severity":1,"message":"163","line":5,"column":27,"nodeType":"147","messageId":"148","endLine":5,"endColumn":34},{"ruleId":"145","severity":1,"message":"164","line":2,"column":5,"nodeType":"147","messageId":"148","endLine":2,"endColumn":18},{"ruleId":"145","severity":1,"message":"165","line":4,"column":5,"nodeType":"147","messageId":"148","endLine":4,"endColumn":20},{"ruleId":"145","severity":1,"message":"166","line":2,"column":10,"nodeType":"147","messageId":"148","endLine":2,"endColumn":14},{"ruleId":"145","severity":1,"message":"159","line":2,"column":10,"nodeType":"147","messageId":"148","endLine":2,"endColumn":18},{"ruleId":"145","severity":1,"message":"167","line":2,"column":20,"nodeType":"147","messageId":"148","endLine":2,"endColumn":33},{"ruleId":"145","severity":1,"message":"161","line":4,"column":10,"nodeType":"147","messageId":"148","endLine":4,"endColumn":15},{"ruleId":"145","severity":1,"message":"168","line":1,"column":17,"nodeType":"147","messageId":"148","endLine":1,"endColumn":23},{"ruleId":"145","severity":1,"message":"169","line":7,"column":11,"nodeType":"147","messageId":"148","endLine":7,"endColumn":13},{"ruleId":"145","severity":1,"message":"170","line":8,"column":10,"nodeType":"147","messageId":"148","endLine":8,"endColumn":15},{"ruleId":"145","severity":1,"message":"171","line":8,"column":17,"nodeType":"147","messageId":"148","endLine":8,"endColumn":25},{"ruleId":"145","severity":1,"message":"168","line":1,"column":17,"nodeType":"147","messageId":"148","endLine":1,"endColumn":23},{"ruleId":"145","severity":1,"message":"172","line":5,"column":3,"nodeType":"147","messageId":"148","endLine":5,"endColumn":16},{"ruleId":"145","severity":1,"message":"173","line":6,"column":3,"nodeType":"147","messageId":"148","endLine":6,"endColumn":12},{"ruleId":"145","severity":1,"message":"174","line":10,"column":8,"nodeType":"147","messageId":"148","endLine":10,"endColumn":16},{"ruleId":"145","severity":1,"message":"169","line":13,"column":11,"nodeType":"147","messageId":"148","endLine":13,"endColumn":13},{"ruleId":"145","severity":1,"message":"175","line":13,"column":15,"nodeType":"147","messageId":"148","endLine":13,"endColumn":20},{"ruleId":"145","severity":1,"message":"176","line":13,"column":22,"nodeType":"147","messageId":"148","endLine":13,"endColumn":27},{"ruleId":"145","severity":1,"message":"177","line":13,"column":29,"nodeType":"147","messageId":"148","endLine":13,"endColumn":34},{"ruleId":"145","severity":1,"message":"178","line":13,"column":36,"nodeType":"147","messageId":"148","endLine":13,"endColumn":42},{"ruleId":"145","severity":1,"message":"179","line":13,"column":44,"nodeType":"147","messageId":"148","endLine":13,"endColumn":48},{"ruleId":"145","severity":1,"message":"180","line":13,"column":50,"nodeType":"147","messageId":"148","endLine":13,"endColumn":55},"no-native-reassign",["181"],"no-negated-in-lhs",["182"],"no-unused-vars","'login' is assigned a value but never used.","Identifier","unusedVar","'forgot' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'registerUser' is defined but never used.","'setIsLoged' is assigned a value but never used.","'stringify' is defined but never used.","'useState' is defined but never used.","'avatar' is defined but never used.","'ADD_USER' is defined but never used.","'REMOVE_USER' is defined but never used.","'FaEye' is defined but never used.","'FaRegEye' is defined but never used.","'FaTrash' is defined but never used.","'ACTIVATE_USER' is defined but never used.","'DEACTIVATE_USER' is defined but never used.","'Link' is defined but never used.","'ADD_USER_FORM' is defined but never used.","'useRef' is defined but never used.","'id' is assigned a value but never used.","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","'EXIT_VEW_USER' is defined but never used.","'EDIT_USER' is defined but never used.","'Edituser' is defined but never used.","'fname' is assigned a value but never used.","'lname' is assigned a value but never used.","'email' is assigned a value but never used.","'status' is assigned a value but never used.","'role' is assigned a value but never used.","'phone' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]